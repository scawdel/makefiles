# Copyright 2014-2016, Stephen Fryatt (info@stevefryatt.org.uk)
#
# This file is part of SFTools Shared Makefiles:
#
#   http://www.stevefryatt.org.uk/software/
#
# Licensed under the EUPL, Version 1.1 only (the "Licence");
# You may not use this work except in compliance with the
# Licence.
#
# You may obtain a copy of the Licence at:
#
#   http://joinup.ec.europa.eu/software/page/eupl
#
# Unless required by applicable law or agreed to in
# writing, software distributed under the Licence is
# distributed on an "AS IS" basis, WITHOUT WARRANTIES
# OR CONDITIONS OF ANY KIND, either express or implied.
#
# See the Licence for the specific language governing
# permissions and limitations under the Licence.

# Shared Makefile for Tokenize-based BASIC Applications
#
# This file really needs to be run by GNUMake.
# It is intended for native compilation on Linux (for use in a GCCSDK
# environment) or cross-compilation under the GCCSDK.
#
# Set VERSION to build using a version number and not an SVN revision.

.PHONY: all clean application documentation release backup

# Target Details

ARCHIVE ?= application
PACKAGE ?=
APP ?= !App
UKRES ?= Resources/UK
RUNIMAGE ?= !RunImage,ffb
MENUS ?= Menus,ffd
FINDHELP ?= !Help,ffb
TEXTHELP ?= HelpText,fff
SHHELP ?=
HTMLHELP ?=
README ?= ReadMe,fff
LICENSE ?= Licence,fff
ADDITIONS ?=

# Set up the source files.

MANSRC ?= Source
MANSPR ?= ManSprite
READMEHDR ?= Header
MENUSRC ?= menudef
FINDHELPSRC ?= Help.bbt
PKGCTRL ?= Control

SRCS ?= AppSrc.bbt

# Set up the various build directories.

SRCDIR := src
MENUDIR := menus
MANUAL := manual
OUTDIR := build
PKGDIR := package

# Includes and libraries.

LIBPATHS := BASIC:$(SFTOOLS_BASIC)/

# Build Tools

MKDIR := mkdir
RM := rm -rf
CP := cp
ZIP := $(GCCSDK_INSTALL_ENV)/bin/zip
MANTOOLS := $(SFTOOLS_BIN)/mantools
BINDHELP := $(SFTOOLS_BIN)/bindhelp
TEXTMERGE := $(SFTOOLS_BIN)/textmerge
MENUGEN := $(SFTOOLS_BIN)/menugen
TOKENIZE := $(SFTOOLS_BIN)/tokenize
GETPKGREV := $(SFTOOLS_BIN)/getpackagerev
MAKECONTROL := $(SFTOOLS_BIN)/makecontrol

# Build Flags

ZIPFLAGS := -x "*/.svn/*" -r -, -9
SRCZIPFLAGS := -x "*/.svn/*" -r -9
PKGZIPFLAGS := -x "*/.svn/*" -r -, -9
BUZIPFLAGS := -x "*/.svn/*" -r -9
BINDHELPFLAGS := -f -r -v
MENUGENFLAGS :=
TOKENIZEFLAGS := -verbose -crunch EIrW -warn pV -swi -swis $(GCCSDK_INSTALL_CROSSBIN)/../arm-unknown-riscos/include/swis.h -swis $(GCCSDK_INSTALL_ENV)/include/TokSWIs.h

# The build date.

BUILD_DATE := $(shell date "+%d %b %Y")
HELP_DATE := $(shell date "+%-d %B %Y")

# Construct version or revision information.

ifeq ($(VERSION),)
  RELEASE := $(shell svnversion --no-newline)
  VERSION := r$(RELEASE)
  RELEASE := $(subst :,-,$(RELEASE))
  HELP_VERSION := ----
ifneq ($(PACKAGE),)
  PACKAGE := $(PACKAGE)Unstable
  PKG_VERSION := $(shell $(GETPKGREV) --index unstable --package $(PACKAGE) --revision $(VERSION))
endif
else
  RELEASE := $(subst .,,$(VERSION))
  HELP_VERSION := $(VERSION)
ifneq ($(PACKAGE),)
  PKG_VERSION := $(shell $(GETPKGREV) --index stable --package $(PACKAGE) --revision $(VERSION))
endif
endif

$(info Building with version $(VERSION) ($(RELEASE)) on date $(BUILD_DATE))

# The archives to assemble the release files, sources and backups in.
# If $(RELEASE) is set, then the file can be given a version number suffix.

ZIPFILE := $(ARCHIVE)$(RELEASE).zip
SRCZIPFILE := $(ARCHIVE)$(RELEASE)src.zip
PKGZIPFILE := $(PACKAGE)_$(PKG_VERSION).zip
BUZIPFILE := $(ARCHIVE)$(shell date "+%Y%m%d").zip

# Build everything, but don't package it for release.

all: application documentation

# Build the application and its supporting binary files.

application: $(OUTDIR)/$(APP)/$(RUNIMAGE) $(OUTDIR)/$(APP)/$(UKRES)/$(MENUS)

# Build the complete !RunImage from the object files.

SRCS := $(addprefix $(SRCDIR)/, $(SRCS))

$(OUTDIR)/$(APP)/$(RUNIMAGE): $(SRCS)
	$(TOKENIZE) $(TOKENIZEFLAGS) $(firstword $(SRCS)) -link -out $(OUTDIR)/$(APP)/$(RUNIMAGE) -path $(LIBPATHS) -define 'build_date$$=$(BUILD_DATE)' -define 'build_version$$=$(VERSION)'

# Build the menus file.

$(OUTDIR)/$(APP)/$(UKRES)/$(MENUS): $(MENUDIR)/$(MENUSRC)
	$(MENUGEN) $(MENUDIR)/$(MENUSRC) $(OUTDIR)/$(APP)/$(UKRES)/$(MENUS) $(MENUGENFLAGS)

# Build the documentation

documentation: $(OUTDIR)/$(APP)/$(FINDHELP) $(OUTDIR)/$(README) $(OUTDIR)/$(APP)/$(UKRES)/$(TEXTHELP) $(if $(SHHELP), $(OUTDIR)/$(APP)/$(UKRES)/$(SHHELP)) $(if $(HTMLHELP), $(OUTDIR)/$(HTMLHELP))

$(OUTDIR)/$(APP)/$(FINDHELP): $(MANUAL)/$(FINDHELPSRC)
	$(TOKENIZE) $(TOKENIZEFLAGS) $(MANUAL)/$(FINDHELPSRC) -out $(OUTDIR)/$(APP)/$(FINDHELP)

$(OUTDIR)/$(APP)/$(UKRES)/$(TEXTHELP): $(MANUAL)/$(MANSRC)
	$(MANTOOLS) -MTEXT -I$(MANUAL)/$(MANSRC) -O$(OUTDIR)/$(APP)/$(UKRES)/$(TEXTHELP) -D'version=$(HELP_VERSION)' -D'date=$(HELP_DATE)'

ifneq ($(SHHELP),)
$(OUTDIR)/$(APP)/$(UKRES)/$(SHHELP): $(MANUAL)/$(MANSRC) $(MANUAL)/$(MANSPR)
	$(MANTOOLS) -MSTRONG -I$(MANUAL)/$(MANSRC) -OSHTemp -D'version=$(HELP_VERSION)' -D'date=$(HELP_DATE)'
	$(CP) $(MANUAL)/$(MANSPR) SHTemp/Sprites,ff9
	$(BINDHELP) SHTemp $(OUTDIR)/$(APP)/$(UKRES)/$(SHHELP) $(BINDHELPFLAGS)
	$(RM) SHTemp
endif

$(OUTDIR)/$(README): $(OUTDIR)/$(APP)/$(UKRES)/$(TEXTHELP) $(MANUAL)/$(READMEHDR)
	$(TEXTMERGE) $(OUTDIR)/$(README) $(OUTDIR)/$(APP)/$(UKRES)/$(TEXTHELP) $(MANUAL)/$(READMEHDR) 5

ifneq ($(HTMLHELP),)
$(OUTDIR)/$(HTMLHELP): $(MANUAL)/$(MANSRC)
	$(MANTOOLS) -MHTML -C../images/ -I$(MANUAL)/$(MANSRC) -O$(OUTDIR)/$(HTMLHELP) -D'version=$(HELP_VERSION)' -D'date=$(HELP_DATE)'
endif


# Build the release Zip file.

release: clean all
	$(RM) ../$(ZIPFILE)
	(cd $(OUTDIR) ; $(ZIP) $(ZIPFLAGS) ../../$(ZIPFILE) $(APP) $(README) $(LICENSE) $(ADDITIONS))
ifneq ($(PACKAGE),)
	$(RM) ../$(PKGZIPFILE)
	$(RM) $(OUTDIR)/package/Apps/Misc/*
	(cd $(OUTDIR) ; rsync -av --exclude=*.svn* $(APP) package/Apps/Misc/ )
	$(MAKECONTROL) --template $(PKGDIR)/$(PKGCTRL) --control $(OUTDIR)/package/RiscPkg/Control --version $(PKG_VERSION)
	(cd $(OUTDIR)/package ; $(ZIP) $(PKGZIPFLAGS) ../../../$(PKGZIPFILE) Apps RiscPkg Sprites SysVars)
endif
	$(RM) ../$(SRCZIPFILE)
	$(ZIP) $(SRCZIPFLAGS) ../$(SRCZIPFILE) $(OUTDIR) $(SRCDIR) $(MENUDIR) $(MANUAL) Makefile


# Build a backup Zip file

backup:
	$(RM) ../$(BUZIPFILE)
	$(ZIP) $(BUZIPFLAGS) ../$(BUZIPFILE) *


# Clean targets

clean:
	$(RM) $(OUTDIR)/$(APP)/$(RUNIMAGE)
	$(RM) $(OUTDIR)/$(APP)/$(FINDHELP)
	$(RM) $(OUTDIR)/$(APP)/$(UKRES)/$(TEXTHELP)
	$(RM) $(OUTDIR)/$(APP)/$(UKRES)/$(MENUS)
	$(RM) $(OUTDIR)/$(README)
ifneq ($(SHHELP),)
	$(RM) $(OUTDIR)/$(APP)/$(UKRES)/$(SHHELP)
endif
ifneq ($(HTMLHELP),)
	$(RM) $(OUTDIR)/$(HTMLHELP)
endif


